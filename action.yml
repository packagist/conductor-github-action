name: 'Private Packagist Conductor'
description: 'GitHub Action to integrate Private Packagist Conductor with your CI'

author: Packagist Conductors GmbH <contact@packagist.com>

inputs:
    file_pattern:
        description: The file pattern used for `git add`. For example `composer.*`
        default: '.'
        required: false

runs:
    using: "composite"
    steps:
        - run: |
            CONDUCTOR_TOKEN=$(jq -r '.client_payload.composerAuthentication.token' $GITHUB_EVENT_PATH)
            echo "::add-mask::$CONDUCTOR_TOKEN"
          if: ${{ github.event.client_payload.composerAuthentication.type != 'none' }}
          shell: "bash"

        - name: "Validate GitHub action version"
          shell: "bash"
          run: "${GITHUB_ACTION_PATH}/bin/ci_version_check.sh ${{ github.event.client_payload.requirements.minimumCiActionVersion }} 1.1.1"

        - name: "Validate PHP version"
          shell: "bash"
          run: "${GITHUB_ACTION_PATH}/bin/php_version_check.sh ${{ github.event.client_payload.requirements.minimumPhpVersion }}"

        - name: "Validate Composer version"
          shell: "bash"
          run: "${GITHUB_ACTION_PATH}/bin/composer_version_check.sh ${{ github.event.client_payload.requirements.minimumComposerVersion }}"

        - name: Configure Composer Authentication
          shell: "bash"
          if: ${{ github.event.client_payload.composerAuthentication.type == 'environment' }}
          run: echo 'COMPOSER_AUTH=${{ github.event.client_payload.composerAuthentication.environment }}' >> "$GITHUB_ENV"

        - name: Install dependencies
          uses: ramsey/composer-install@57532f8be5bda426838819c5ee9afb8af389d51a # 3.0.0
          with:
              working-directory: "${{ github.event.client_payload.workingDirectory }}"

        - name: Composer update
          run: "${{ github.event.client_payload.updateCommand.plain }}"
          shell: bash
          working-directory: "${{ github.event.client_payload.workingDirectory }}"

        - name: Create branch
          run: git checkout -b $BRANCH
          shell: bash
          env:
              BRANCH: ${{ github.event.client_payload.branch }}

        - name: Add files
          run: |
              read -r -a PATTERN_EXPANDED <<< "$FILE_PATTERN";
              git add ${FILE_PATTERN:+"${PATTERN_EXPANDED[@]}"};
          shell: bash
          env:
              FILE_PATTERN: ${{ inputs.file_pattern }}

        - name: Commit
          uses: qoomon/actions--create-commit@dfef4d264de752be6d6195a4d61a2f3d3262d406 # v1.2.3
          with:
              message: ${{ github.event.client_payload.commitMessage }}
              skip-empty: true

        - name: Store number of changed files
          id: number_of_changed_files
          run: echo "COUNT=$(git --no-pager diff --name-only HEAD~ | wc -l | tr -d ' ')" >> $GITHUB_OUTPUT
          shell: bash

        - name: Push branch
          run: git push origin $BRANCH --force
          shell: bash
          env:
              BRANCH: ${{ github.event.client_payload.branch }}

        - name: Call webhook from Private Packagist to create the PR
          shell: bash
          run: "curl -fsSL -X POST -u ${{ github.event.client_payload.webhook.authentication.username }}:${{ github.event.client_payload.webhook.authentication.password }} --header \"Content-Type: application/json\" --data '{\"runId\":\"${{github.run_id}}\",\"numberOfChangedFiles\":\"${{ steps.number_of_changed_files.outputs.COUNT }}\",\"versions\":{\"ciScriptVersion\":\"1.1.1\"}}' ${{ github.event.client_payload.webhook.executedUrl }}"

        - name: Call webhook from Private Packagist to notify about build failure
          shell: bash
          if: ${{ failure() }}
          run: "curl -fsSL -X POST -u ${{ github.event.client_payload.webhook.authentication.username }}:${{ github.event.client_payload.webhook.authentication.password }} --header \"Content-Type: application/json\" --data '{\"runId\":\"${{github.run_id}}\",\"versions\":{\"ciScriptVersion\":\"1.1.1\"}}' ${{ github.event.client_payload.webhook.errorUrl }}"
